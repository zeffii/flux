


def evaluate_graph(graph):

    """
    the goal of this function is to perform evaluation on all nodes in the given graph.
    the graph can be a subset of nodes, or the whole tree. 

    "graph" is expected to be an iterable of nodes, likely generated by "make_dependency_graph"

    """

    graph_processing_health = "healthy"

    for node in graph:

        if graph_processing_health == "healthy":

            try:
                node.evaluate()
                node.status = "finished evaluation"
            except Exception as err:
                print(node.name, err)
                node.status = "failed evaluation"
                graph_processing_health = "halted"

        else:
            node.status = "unprocessed"


def make_dependency_graph(tree):

    """
    in this simple implementation the whole tree is parsed and a list of nodes is generated that
    represent an acceptable sequence in which to evaluate those nodes.

    the exact algorithm is not super fancy while testing

    """

    ...